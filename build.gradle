plugins {
    id 'java'
    id 'groovy'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

version = findProperty('wiclax4j.version')

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.9'
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'net.bytebuddy:byte-buddy:1.12.8'
    testImplementation 'org.objenesis:objenesis:3.2'
}

publishing {
    repositories {
        maven {
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username findProperty("nexus.username")
                password findProperty("nexus.password")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.github.csutorasa.wiclax4j'
            artifactId 'wiclax4j'
            version findProperty('wiclax4j.version')

            from components.java

            pom {
                name = 'Wiclax4j'
                description = 'This is a pure java generic acquisition Wiclax server implementation'
                url = 'https://www.github.com/csutorasa/wiclax4j'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'csutorasa'
                        name = 'Ármin Csutorás'
                        email = 'csutorasa@gmail.com'
                        organizationUrl = 'https://github.com/csutorasa'
                    }
                }
                scm {
                    connection = 'https://github.com/csutorasa/wiclax4j.git'
                    developerConnection = 'https://github.com/csutorasa/wiclax4j.git'
                    url = 'https://github.com/csutorasa/wiclax4j'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
    }
}

sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'csutorasa'
        property 'sonar.branch.name', 'master'
        property 'sonar.login', System.getenv('SONAR_TOKEN')
        property 'sonar.sourceEncoding', 'UTF-8'
    }
}
project.tasks['sonarqube'].dependsOn 'jacocoTestReport'
